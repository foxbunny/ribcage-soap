# Ribcage-SOAP changelog

# 0.0.3

## `#isDeleted()` method

This method will be called whenever an object is `#destroy()`ed and will
determine if the deletion was successful. A matching `deleted` option can be
passed to the `destroy()` call.

## `#soapXTemplateSource` properties

Now it's possible to specify only the template source, and have the mixin take
care of rendering it with Underscore.

## `#soapGetXParams` methods

For each CRUD method, it is now possible to override the way mixin gets templat
context data, similarly to the way it's done in Ribcage TemplateView. This is
especially useful for collections that need to retrieve a set of models based
on variable parameters.

## `options.extraParams`

The sync method will pass the extraParams to `#soapGetXParams` and the
default implementation of `#soapGetXParams` methods will override any model
data using those params. This means that extra parameters can be passed for
each `#save()`, `#fetch()` or `#destroy()` call separately without hard-wiring
the definiton in a model or a collection constructor.

# 0.0.2

## `#destory()` fix

The `#destroy()` method now works correctly (or incorrectly, depending on how
you look at it), and behaves exactly the same as `#fetch()` except it fires
'destroy' event instead of 'sync'. The response data is fully parsed as it
should have been the case initially.
